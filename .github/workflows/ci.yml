name: CI

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m pytest tests

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for multiple platforms
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/py-app:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/py-app:cache
          cache-to: type=inline
          pull: true

  verify:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Pull Docker image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/py-app:latest

      - name: Run Docker container
        run: docker run -d -p 5000:5000 --name test-container ${{ secrets.DOCKER_USERNAME }}/py-app:latest

      - name: Verify container is running
        run: docker ps | grep test-container

      - name: Check container health (Optional)
        run: |
          sleep 10 # Wait for container to start
          curl http://localhost:5000 || echo "Container not responding"

      - name: Stop and remove container
        run: |
          docker stop test-container
          docker rm test-container
